# Generated by Django 4.2.11 on 2025-08-21 07:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('message_type', models.CharField(choices=[('USER_MESSAGE', 'User Message'), ('SYSTEM_ALERT', 'System Alert'), ('APPROVAL_REQUEST', 'Approval Request'), ('APPROVAL_RESPONSE', 'Approval Response'), ('PROGRESS_UPDATE', 'Progress Update'), ('DEADLINE_REMINDER', 'Deadline Reminder'), ('SYSTEM_MAINTENANCE', 'System Maintenance')], default='USER_MESSAGE', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low Priority'), ('NORMAL', 'Normal Priority'), ('HIGH', 'High Priority'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('related_object_type', models.CharField(blank=True, help_text='Model name of related object', max_length=50)),
                ('related_object_id', models.CharField(blank=True, help_text='ID of related object', max_length=100)),
                ('related_url', models.URLField(blank=True, help_text='URL to related object/action')),
                ('requires_acknowledgment', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Message expiration time', null=True)),
                ('is_broadcast', models.BooleanField(default=False, help_text='Broadcast to all users in role/department')),
                ('is_active', models.BooleanField(default=True)),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-sent_at', '-priority'],
            },
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('channel_type', models.CharField(choices=[('SYSTEM', 'System Notifications'), ('APPROVAL', 'Approval Workflow'), ('PROGRESS', 'Progress Updates'), ('GENERAL', 'General Communications'), ('URGENT', 'Urgent Messages')], default='GENERAL', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('allow_user_messages', models.BooleanField(default=True, help_text='Allow person-to-person messages')),
                ('allow_system_messages', models.BooleanField(default=True, help_text='Allow system-generated messages')),
                ('auto_delete_after_days', models.IntegerField(default=30, help_text='Auto-delete messages after X days (0 = never)')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Channel',
                'verbose_name_plural': 'Notification Channels',
                'ordering': ['channel_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('title_template', models.CharField(help_text='Title template with placeholders', max_length=200)),
                ('message_template', models.TextField(help_text='Message template with placeholders')),
                ('message_type', models.CharField(choices=[('USER_MESSAGE', 'User Message'), ('SYSTEM_ALERT', 'System Alert'), ('APPROVAL_REQUEST', 'Approval Request'), ('APPROVAL_RESPONSE', 'Approval Response'), ('PROGRESS_UPDATE', 'Progress Update'), ('DEADLINE_REMINDER', 'Deadline Reminder'), ('SYSTEM_MAINTENANCE', 'System Maintenance')], max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low Priority'), ('NORMAL', 'Normal Priority'), ('HIGH', 'High Priority'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('requires_acknowledgment', models.BooleanField(default=False)),
                ('expires_after_hours', models.IntegerField(default=0, help_text='Auto-expire after X hours (0 = never)')),
                ('usage_count', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationchannel')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationRecipient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('response_message', models.TextField(blank=True, help_text='Optional response from recipient')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notification')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Recipient',
                'verbose_name_plural': 'Notification Recipients',
                'ordering': ['-notification__sent_at'],
                'unique_together': {('notification', 'recipient')},
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='notifications.notificationchannel'),
        ),
        migrations.AddField(
            model_name='notification',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='recipients',
            field=models.ManyToManyField(related_name='received_notifications', through='notifications.NotificationRecipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(blank=True, help_text='Null for system-generated messages', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL),
        ),
    ]
