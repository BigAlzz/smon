# Generated by Django 4.2.7 on 2025-08-20 09:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_number', models.CharField(blank=True, max_length=20, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z0-9]+$', 'Employee number must be alphanumeric')])),
                ('job_title', models.CharField(max_length=200)),
                ('department', models.CharField(max_length=200)),
                ('unit_subdirectorate', models.CharField(blank=True, help_text='Unit or Sub-Directorate', max_length=200)),
                ('office_location', models.CharField(blank=True, max_length=200)),
                ('phone_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid phone number')])),
                ('mobile_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{9,15}$', 'Enter a valid mobile number')])),
                ('primary_role', models.CharField(choices=[('SENIOR_MANAGER', 'Senior Manager / EXCO'), ('PROGRAMME_MANAGER', 'Programme Manager'), ('ME_STRATEGY', 'M&E / Strategy'), ('FINANCE', 'Finance'), ('SYSTEM_ADMIN', 'System Admin')], default='PROGRAMME_MANAGER', max_length=20)),
                ('is_active_user', models.BooleanField(default=True, help_text='Whether user can access the system')),
                ('email_notifications', models.BooleanField(default=True, help_text='Receive email notifications')),
                ('dashboard_preferences', models.JSONField(blank=True, default=dict, help_text='User dashboard preferences and settings')),
                ('can_view_all_kpas', models.BooleanField(default=False, help_text='Can view all KPAs regardless of assignment')),
                ('can_approve_updates', models.BooleanField(default=False, help_text='Can approve progress updates')),
                ('can_generate_reports', models.BooleanField(default=True, help_text='Can generate and download reports')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('line_manager', models.ForeignKey(blank=True, help_text='Direct line manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='direct_reports', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_email', models.EmailField(help_text='Email of user (preserved even if user is deleted)', max_length=254)),
                ('user_ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user', null=True)),
                ('action', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('APPROVE', 'Approve'), ('REJECT', 'Reject'), ('SUBMIT', 'Submit'), ('EXPORT', 'Export'), ('IMPORT', 'Import')], max_length=20)),
                ('model_name', models.CharField(help_text='Name of the model that was changed', max_length=100)),
                ('object_id', models.CharField(help_text='ID of the object that was changed', max_length=100)),
                ('object_repr', models.CharField(help_text='String representation of the object', max_length=200)),
                ('changes', models.JSONField(default=dict, help_text='Before and after values for changed fields')),
                ('additional_data', models.JSONField(blank=True, default=dict, help_text='Additional context or metadata')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('session_key', models.CharField(blank=True, help_text='Session key for tracking user sessions', max_length=40)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='accounts_au_user_id_d4cccd_idx'), models.Index(fields=['model_name', 'object_id'], name='accounts_au_model_n_76c60d_idx'), models.Index(fields=['action', 'timestamp'], name='accounts_au_action_11cc52_idx')],
            },
        ),
    ]
